<Window x:Class="AvigilonAlarmDemoApp.UI.View.AlarmListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:AvigilonAlarmDemoApp.UI.Converters" 
        DataContext="{Binding Source={StaticResource mainViewModelLocator},  Path=AlarmListWindowViewModel}"
        Title="AlarmListWndow"  Height="350" Width="700">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:DateConverter x:Key="DateConverter"/>
        <local:StatusTypeNameToBrushConverter x:Key="StatusTypeNameToBrushConverter" />
        <local:CameraConverter x:Key="CameraConverter" />
        <Style TargetType="DataGridCell">
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderThickness="0,0,0,1" BorderBrush="Black" Background="#FFCBCBCB">
                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />

                        </Border>


                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="0.3*" />
            <RowDefinition Height="1.5*"/>
            <RowDefinition Height="0.5*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="#FFEAE8E8">
            <Label Content="Alarms" HorizontalAlignment="Center" VerticalAlignment="Center" Width="72" FontSize="14" FontWeight="Bold" Height="29"/>
        </Grid>
        <ListView Name="Alarms" ItemsSource="{Binding Path=Alarms, Mode=TwoWay}" Cursor="Hand" SelectedItem="{Binding Path=SelectedAlarm,Mode=TwoWay}" Grid.Row="1" >
             <i:Interaction.Triggers>                
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangeCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle1}" >
                    <GridViewColumn  Header="Alarm Name" Width="110">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" TextAlignment="Left" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Missed Triggers" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding MissedTriggers}" TextAlignment="Center" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="State" Width="120">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding State}" TextAlignment="Center" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn  Header="Trigger Date/Time" Width="150" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TimeOfMostRecentActivation,Converter={StaticResource DateConverter}}"  TextAlignment="Center" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Camera Names" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Cameras,Converter={StaticResource CameraConverter}}" TextAlignment="Left" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="{Binding State, Converter={StaticResource StatusTypeNameToBrushConverter} }"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <Grid Grid.Row="2" Background="#FFEAE8E8">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" MaxHeight="50" MaxWidth="680">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Margin" Value="35,10,32,0"/>
                            <Setter Property="Padding" Value="3,0,5,3"/>
                    </Style>
                    </StackPanel.Resources>
                <Button Content="Purge" Visibility="{Binding PurgeButtonVisibility}" Cursor="Hand" IsEnabled="{Binding IsPurgeEnabled, Mode=TwoWay}" VerticalAlignment="Center" x:Name="btnPurge" Width="85" Height="25" Background="#FFCBCBCB">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding PurgeCommand}"
        					CommandParameter="{Binding SelectedItem, ElementName=Alarms}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Separator Width="20" Background="Transparent"/>
                    <Button Content="Acknowledge" Visibility="{Binding AcknowledgeButtonVisibility}" Cursor="Hand" IsEnabled="{Binding IsAckEnabled, Mode=TwoWay}" VerticalAlignment="Center"  Width="85" Height="25" Background="#FFCBCBCB">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding AcknowledgeCommand}"
        					CommandParameter="{Binding SelectedItem, ElementName=Alarms}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Separator Width="20" Background="Transparent"/>
                    <Button x:Name="AssignButton" Content="Assign" VerticalAlignment="Center" Cursor="Hand"  Visibility="{Binding AssignButtonVisibility}"  IsEnabled="{Binding IsAssignEnabled, Mode=TwoWay}"  Width="85" Height="25" Background="#FFCBCBCB">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding AssignCommand}"
        					CommandParameter="{Binding SelectedItem, ElementName=Alarms}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button x:Name="UnAssignButton" Content="UnAssign" VerticalAlignment="Center" Cursor="Hand"  Visibility="{Binding UnassignButtonVisibility}"  IsEnabled="{Binding SelectedItems.Count, ElementName=Alarms}"  Width="85" Height="25" Background="#FFCBCBCB">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding UnassignCommand}"
        					CommandParameter="{Binding SelectedItem, ElementName=Alarms}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Separator Width="20" Background="Transparent"/>
                    <Button Content="LogOut" VerticalAlignment="Center" HorizontalAlignment="Right" Cursor="Hand"  Width="85" Height="25" Padding="3,0,5,3" Background="#FFCBCBCB">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding LogoutCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
        </Grid>
    </Grid>
</Window>